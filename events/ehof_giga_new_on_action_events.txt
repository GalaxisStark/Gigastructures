namespace = ehof_giga_new_on_action

country_event = {
	id = ehof_giga_new_on_action.2
	is_triggered_only = yes
	hide_window = yes

	immediate = {
		from = {
			random_list = {
				90 = {
					if = {
						limit = {
							root = {
								has_country_flag = ehof_spawn_reality_code
							}
						}
						
						random_list = {
							20 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_01"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							20 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_02"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							10 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_03"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							10 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_04"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							6 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_05"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							4 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "basic_init_06"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							6 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "binary_init_01"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							4 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "binary_init_02"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							3 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "trinary_init_01"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							3 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "trinary_init_02"
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							0 = {
								ehof_giga_new_create_new_continuous_system = {
									initializer = "class_t_rc"
								}
								modifier = {
									add = 100 
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
							}
							# Real Space
							2 = {
								modifier = {
									factor = 0
									NOT = {
										has_global_flag = has_real_space_mod
									}
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
								ehof_giga_new_create_new_continuous_system = {
									initializer = "dark_init_01"
								}
							}
							6 = {
								modifier = {
									factor = 0
									NOT = {
										has_global_flag = has_real_space_mod
									}
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
								ehof_giga_new_create_new_continuous_system = {
									initializer = "trinary_init_03"
								}
							}
							3 = {
								modifier = {
									factor = 0
									NOT = {
										has_global_flag = has_real_space_mod
									}
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
								ehof_giga_new_create_new_continuous_system = {
									initializer = "trinary_init_04"
								}
							}
							3 = {
								modifier = {
									factor = 0
									NOT = {
										has_global_flag = has_real_space_mod
									}
								}
								modifier = {
									factor = 0
									root = {
										has_country_flag = ehof_code_star_world
									}
								}
								ehof_giga_new_create_new_continuous_system = {
									initializer = "paired_init_01"
								}
							}
						}
						log = "Spawning Reality Code system"
					}
					else = {
						ehof_giga_new_create_new_continuous_system = {
							initializer = "random"
						}
						event_target:giga_last_ehof_spawn = {
							system_event = { id = ehof_giga_new_on_action.6 }
						}
						log = "Spawning cohesive system"
					}
				}
				# Common
				7 = {
					modifier = {
						factor = 0
						OR = {
							has_global_flag = ehof_r_rare_system
							root = {
								OR = {
									has_country_flag = ehof_spawn_reality_code
									is_ai = yes
								}
							}
							AND = {
								any_system = {
									has_star_flag = ehof_unique_system_1
								}
								any_system = {
									has_star_flag = ehof_unique_system_4
								}
							}
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								any_system = {
									has_star_flag = ehof_unique_system_1
								}
							}
							ehof_giga_new_create_new_continuous_system_short = {
								initializer = "cohesive_systems_1"
							}
							# spawn_system = { min_distance >= 25 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_1" }
						}
						1 = {
							modifier = {
								factor = 0
								any_system = {
									has_star_flag = ehof_unique_system_4
								}
							}
							ehof_giga_new_create_new_continuous_system_short = {
								initializer = "cohesive_systems_4"
							}
							# spawn_system = { min_distance >= 25 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_4" }
						}
					}
					log = "Spawning pre-defined cohesive system"
				}
				# Rare
				3 = {
					modifier = {
						factor = 0
						OR = {
							has_global_flag = ehof_r_rare_system
							root = {
								OR = {
									has_country_flag = ehof_spawn_reality_code
									check_variable = {
										which = ehof_phase
										value < 3
									}
									is_ai = yes
								}
							}
							AND = {
								any_system = {
									has_star_flag = ehof_unique_system_2
								}
								any_system = {
									has_star_flag = ehof_unique_system_3
								}
							}
						}
					}
					random_list = {
						1 = {
							modifier = {
								factor = 0
								any_system = {
									has_star_flag = ehof_unique_system_2
								}
							}
							ehof_giga_new_create_new_continuous_system_short = {
								initializer = "cohesive_systems_2"
							}
							# spawn_system = { min_distance >= 25 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_2" }
						}
						1 = {
							modifier = {
								factor = 0
								any_system = {
									has_star_flag = ehof_unique_system_3
								}
							}
							ehof_giga_new_create_new_continuous_system_short = {
								initializer = "cohesive_systems_3"
							}
							# spawn_system = { min_distance >= 25 max_distance <= 30 hyperlane = no initializer = "cohesive_systems_3" }
						}
					}
					log = "Spawning pre-defined rare cohesive system"
				}
			}
		}
	}
}
system_event = {
	id = ehof_giga_new_on_action.5
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		
					
			NAND = {
				ehof_giga_new_can_spawn_dragon = no
				ehof_giga_new_can_spawn_technosphere = no
				ehof_giga_new_can_spawn_wraith = no
				ehof_giga_new_can_spawn_dimensional_horror = no
				ehof_giga_new_can_spawn_fortress = no
				ehof_giga_new_can_spawn_stellarite_devourer = no
				ehof_giga_new_can_spawn_dreadnought = no
				
			}
		
	}
	immediate = {
		
		if = {
			limit = {
				ehof_giga_new_can_spawn_dragon = no
			}
			remove_global_flag = ehof_can_spawn_guardian_dragon
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_dragon
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_technosphere = no
			}
			remove_global_flag = ehof_can_spawn_guardian_sphere
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_sphere
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_wraith = no
			}
			remove_global_flag = ehof_can_spawn_guardian_wraith
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_wraith
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_dimensional_horror = no
			}
			remove_global_flag = ehof_can_spawn_guardian_horror
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_horror
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_fortress = no
			}
			remove_global_flag = ehof_can_spawn_guardian_fortress
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_fortress
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_stellarite_devourer = no
			}
			remove_global_flag = ehof_can_spawn_guardian_stellarite
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_stellarite
		}
		if = {
			limit = {
				ehof_giga_new_can_spawn_dreadnought = no
			}
			remove_global_flag = ehof_can_spawn_guardian_dreadnought
		}
		else = {
			set_global_flag = ehof_can_spawn_guardian_dreadnought
		}
			
					
				
				ehof_giga_new_spawn_guardian = yes
			
	}
}
system_event = {
	id = ehof_giga_new_on_action.3
	is_triggered_only = yes
	hide_window = yes
	immediate = {
		random_list = {
			####################################################################
			# Crystal Entities - Blue
			####################################################################
			1 = {
				ehof_giga_new_spawn_crystal_blue_1 = yes
			}
			####################################################################
			# Crystal Entities - Blue VARIATION
			####################################################################
			1 = {
				modifier = {
					factor = 0
					num_planets_in_system < 4
				}
				ehof_giga_new_spawn_crystal_blue_2 = yes
			}
			####################################################################
			# Crystal Entities - Green (Patrol)
			####################################################################
			1 = {
				modifier = {
					factor = 0
					num_planets_in_system < 4
				}
				ehof_giga_new_spawn_crystal_green_1 = yes
			}
			####################################################################
			# Crystal Entities - Green (Patrol) VARIATION
			####################################################################
			1 = {
				modifier = {
					factor = 0
					num_planets_in_system < 4
				}
				ehof_giga_new_spawn_crystal_green_2 = yes
			}
			####################################################################
			# Crystal Entities - Red
			####################################################################
			1 = {
				modifier = {
					factor = 0
					num_planets_in_system < 5
				}
				ehof_giga_new_spawn_crystal_red_1 = yes
			}
			####################################################################
			# Crystal Entities - Red VARIATION
			####################################################################
			1 = {
				modifier = {
					factor = 0
					num_planets_in_system < 5
				}
				ehof_giga_new_spawn_crystal_red_2 = yes
			}
			####################################################################
			# Cloud Entity
			####################################################################
			1 = {
				ehof_giga_new_spawn_cloud = yes
			}
			####################################################################
			# Space Amoeba, Large pack
			####################################################################
			1 = {
				ehof_giga_new_spawn_large_pack = yes
			}
			####################################################################
			# Space Amoeba, Small pack
			####################################################################
			1 = {
				ehof_giga_new_spawn_small_pack = yes
			}
			####################################################################
			# Space Amoeba ROAMING VARIATION
			####################################################################
			1 = {
				ehof_giga_new_spawn_amoeba_roamers = yes
			}
			####################################################################
			# Mining Drones
			####################################################################
			1 = {
				modifier = {
					factor = 0
					NOT = {
						any_system_planet = {
							has_deposit_for = shipclass_mining_station
							is_star = no
							NOT = {
								giga_is_gas_giant = yes
							}
						}
					}
				}
				ehof_giga_new_spawn_mining_drones_1 = yes
			}
			####################################################################
			# Mining Drones
			####################################################################
			1 = {
				modifier = {
					factor = 0
					NOT = {
						any_system_planet = {
							has_deposit_for = shipclass_mining_station
							is_star = no
							NOT = {
								giga_is_gas_giant = yes
							}
						}
					}
				}
				ehof_giga_new_spawn_mining_drones_2 = yes
			}
			####################################################################
			# Mining Drone Destroyers
			####################################################################
			1 = {
				modifier = {
					factor = 0
					NOT = {
						any_system_planet = {
							has_deposit_for = shipclass_mining_station
						}
					}
				}
				ehof_giga_new_spawn_mining_drones_destro = yes
			}
			####################################################################
			# Mining Drones ALTERNATE
			####################################################################
			1 = {
				modifier = {
					factor = 0
					NOT = {
						any_system_planet = {
							has_deposit_for = shipclass_mining_station
						}
					}
				}
				ehof_giga_new_spawn_mining_drones_3 = yes
			}
			####################################################################
		}
	}
}
system_event = {
	id = ehof_giga_new_on_action.4
	is_triggered_only = yes
	hide_window = yes
	# trigger = {
		
	# 		ehof_giga_new_cannot_spawn_any_megas = no
		
	# }
	immediate = {
		random_list = {
			######################################################################################################################################
			########################################################### GIGASTRUCTURES ###########################################################
			######################################################################################################################################
			############################################## Kugelblitz Containment Silo
			5 = {
				modifier = {
					factor = 0
					has_global_flag = kugel_disabled
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_kugel = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_kugelblitz = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_kugelblitz_system = yes
			}
			############################################## Engineering Test Site
			5 = {
				modifier = {
					factor = 0
					has_global_flag = megabase_disabled
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_macrotest = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_macrotest = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_macrotest_system = yes
			}
			############################################## Neutronium Gigaforge
			5 = {
				modifier = {
					factor = 0
					has_global_flag = gigaforge_disabled
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_neutronium_gigaforge = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_neutronium_gigaforge = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_neutronium_gigaforge_system = yes
			}
			############################################## Particle Accelerator
			#5 = {
			#	modifier = {
			#		factor = 0
			#		has_global_flag = accelerator_disabled
			#	}
			#	modifier = {
			#		factor = 0
			#		ehof_giga_new_system_cannot_spawn_particle_accellerator = yes
			#	}
			#	modifier = {
			#		factor = 0.1
			#		from = {
			#			count_owned_megastructure = {
			#				limit = {
			#					ehof_giga_new_is_particle_accellerator = yes
			#				}
			#				count > 0
			#			}
			#		}
			#	}
			#	ehof_giga_new_create_particle_accellerator_system = yes
			#}
			############################################## Massive Zoo
			5 = {
				modifier = {
					factor = 0
					has_global_flag = orbital_artificial_eco_disabled
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_artificial_eco = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_artificial_eco_system = yes
			}
			############################################## Yggdrasil Orchid
			5 = {
				modifier = {
					factor = 0
					has_global_flag = orchid_disabled
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_yggdrasil = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_yggdrasil = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_yggdrasil_system = yes
			}
			############################################## Ringworld
			5 = {
				modifier = {
					factor = 0
					OR = {
						has_global_flag = vanilla_ringworld_disabled
						ehof_giga_new_system_cannot_spawn_ringworld = yes
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_ringworld = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_ringworld_system = yes
			}
			############################################## Titanic Ringworld
			5 = {
				modifier = {
					factor = 0
					OR = {
						has_global_flag = vanilla_ringworld_disabled
						has_global_flag = ring_titanic_disabled
						ehof_giga_new_system_cannot_spawn_ringworld = yes
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_ringworld = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_titanic_ringworld_system = yes
			}
			############################################## Behemoth Ringworld
			5 = {
				modifier = {
					factor = 0
					OR = {
						has_global_flag = vanilla_ringworld_disabled
						has_global_flag = ring_behemoth_disabled
						has_global_flag = ring_titanic_disabled
						ehof_giga_new_system_cannot_spawn_ringworld = yes
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_ringworld = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_behemoth_ringworld_system = yes
			}
			############################################## Gargantuan Ringworld
			5 = {
				modifier = {
					factor = 0
					OR = {
						has_global_flag = vanilla_ringworld_disabled
						has_global_flag = ring_gargantuan_disabled
						has_global_flag = ring_behemoth_disabled
						has_global_flag = ring_titanic_disabled
						ehof_giga_new_system_cannot_spawn_ringworld = yes
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_gargantuan_ringworld = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_gargantuan_ringworld_system = yes
			}
			######################################################################################################################################
			######################################################################################################################################
			######################################################################################################################################
			############################################## Dyson_sphere
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Utopia"
					}
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_dyson = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_dyson = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_dyson_system = yes
			}
			############################################## Mega Shipyard
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Federations"
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_mega_shipyard = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_mega_shipyard_system = yes
			}
			############################################## Matter Decompressor
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Megacorp"
					}
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_matter_decomp = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_matter_decomp = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_matter_decomp_system = yes
			}
			############################################## Science Nexus
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Utopia"
					}
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_science_nexus = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_science_nexus = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_science_nexus_system = yes
			}
			############################################## Sentry Array
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Utopia"
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_sentry_array = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_sentry_array_system = yes
			}
			############################################## Strategic Coordination Center
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Megacorp"
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_strategic_coord = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_strategic_coord_system = yes
			}
			############################################## Mega Art Installation
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Megacorp"
					}
				}
				modifier = {
					factor = 0
					ehof_giga_new_system_cannot_spawn_mega_art = yes
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_mega_art = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_mega_art_system = yes
			}
			############################################## Interstellar Assembly
			5 = {
				modifier = {
					factor = 0
					NOT = {
						host_has_dlc = "Megacorp"
					}
				}
				modifier = {
					factor = 0.1
					from = {
						count_owned_megastructure = {
							limit = {
								ehof_giga_new_is_interstellar_assembly = yes
							}
							count > 0
						}
					}
				}
				ehof_giga_new_create_broken_interstellar_assembly_system = yes
			}
		}
	}
}
#Handles Bypasses the system shouldn't have, like Lgates 
system_event = {
	id = ehof_giga_new_on_action.6
	is_triggered_only = yes
	hide_window = yes
	trigger = {
		any_system_megastructure = { is_ehof_pillar_convertible_mega = yes }
	}
	immediate = {
		every_system_megastructure = {
			limit = {
				is_ehof_pillar_convertible_mega = yes
			}
			if = {
				limit = {
					NOT = { solar_system = { has_star_flag = converted_pillar } } 	
				}
				solar_system = { set_star_flag = converted_pillar }
				ehof_bypass_pillar_conversion = yes
			}
			else ={
				delete_megastructure = this
			}
		}
	}
}
event = {
	id = ehof_giga_new_on_action.9999
	fire_only_once = yes
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		if = {
			limit = { years_passed >= 2 }
		
		
		every_country = {
			limit = {
				has_country_flag = ehof_recently_spawned_guardian
			}
			remove_country_flag = ehof_recently_spawned_guardian
		}
	}
}
}